#!/bin/bash

readonly OPENSCAD="/Applications/OpenSCAD.app/Contents/MacOS/OpenSCAD"

SUCCESS=0
FAIL=1
OSC_ERROR=2
OSC_WARNING=3

function die_with_message
{
  message=$1
  echo $message
  exit $FAIL
}

function check_file_for_errors 
{
  # 2>&1, below, means send stderr to stdout
  local result=$("$OPENSCAD" --hardwarnings -o .osc-data/filecheck.png "$1" 2>&1)
  case "$result" in
    *WARNING*)
      echo $result
      return $OSC_WARNING
      ;;
    *ERROR*)
      echo $result
      return $OSC_ERROR
      ;;
  esac
  return 0
}

function start_action
{
  clean_action
  local new_work_file=$1
  mkdir -pv $(dirname "$new_work_file")
  touch $new_work_file".scad"
  mkdir -p ".osc-data"
  echo $new_work_file > ".osc-data/working_file"
  return 0
}

function check_action
{
  work_file="$(memory)"
  if (( $? == $FAIL ))
  then
    die_with_message "$work_file"
  fi
  check_file_for_errors "$work_file.scad"
  result=$?
  if (( result == OSC_WARNING ))
  then
    echo "Failed with warnings."
    exit $FAIL
  elif (( $result == $OSC_ERROR ))
  then
    echo "File has errors."
    exit $FAIL
  else
    echo "File checks out."
  fi
}

function clean_action
{
  rm -rf .osc-data
}

function get_info
{
  # "$OPENSCAD" --info "$work_file.scad"
  # exit 0
  :
}

function memory
{
  if [ -e ".osc-data/working_file" ]
  then
    cat .osc-data/working_file
    return $SUCCESS
  else
    die_with_message "There's nothing in progress. You'll need to start a new work file."
  fi
}

action="$1"
shift
case $action in
  start)
    start_action "$@"
  ;;
  clean)
    clean_action
  ;;
  check)
    check_action
  ;;
  info)
    get_info
  ;;
  preview)
    work_file="$(memory)"
    if (( $? == $FAIL ))
    then
      die_with_message "$work_file"
    fi
    check_file_for_errors "$work_file.scad"
    if (( $? != $SUCCESS ))
    then
        die_with_message "Correct the issues then try again."
    fi
    "$OPENSCAD" --hardwarnings -o ".osc-data/preview.png" "$(memory).scad"
    kitty +kitten icat .osc-data/preview.png
    exit $SUCCESS
  ;;
  render)
    work_file="$(memory)"
    if (( $? == $FAIL ))
    then
      die_with_message "There is nothing in progress. Specify a work file."
    fi
    "$OPENSCAD" --hardwarnings -o "$work_file.stl" "$work_file.scad"
    exit 0
  ;;
  *)
    die_with_message "That's not a recognized command."
esac
