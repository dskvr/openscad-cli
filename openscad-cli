#!/bin/bash

readonly OPENSCAD="/Applications/OpenSCAD.app/Contents/MacOS/OpenSCAD"
GREATER_THAN="-gt"

function die_with_message
{
  message=$1
  echo $1
  exit 1
}

action="$1"

if [ ! -z $2 ]
then
  work_file=$2
elif [ -e ".osc-data" ]
then
    work_file=$(cat .osc-data)
else
    die_with_message "There's nothing in progress. Specify a work file."
fi

function check_file_for_errors 
{
  local temp=$(mktemp XXXXXX.png)
  # 2>&1, below, means send stderr to stdout (or vice versa?)
  local result=$("$OPENSCAD" --hardwarnings -o "$temp" "$1" 2>&1)
  rm "$temp"
  case "$result" in
    *WARNING*)
      echo $result
      echo "Failed with warnings."
      return 1
      ;;
    *ERROR*)
      echo $result
      echo "Failed with errors."
      return 1
      ;;
  esac
  return 0
}

function start_working_on
{
  mkdir -pv $(dirname "$new_work_file")
  echo $new_work_file > .osc-data
  touch $new_work_file".scad"
  return 0
}

case $action in
  start)
    start_working_on "$work_file"
  ;;
  clean)
    rm .osc-data
    rm preview.png
  ;;
  check)
    check_file_for_errors "$work_file.scad"
    result=$?
    if [ $result -eq 0 ] 
    then
      echo "File checks out."
    else
      exit 1
    fi
  ;;
  info)
    "$OPENSCAD" --info "$work_file.scad"
    exit 0
  ;;
  preview)
    check_file_for_errors "$work_file.scad"
    if [ $? -ne 0 ]
    then
      exit 1
    fi
    rm preview.png
    "$OPENSCAD" --hardwarnings -o "preview.png" "$work_file.scad"
    kitty +kitten icat preview.png
    exit 0
  ;;
  render)
    "$OPENSCAD" --hardwarnings -o "$work_file.stl" "$work_file.scad"
    exit 0
  ;;
  *)
    die_with_message "That's not a recognized command."
esac
